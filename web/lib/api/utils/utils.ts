/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Full Stack FastAPI Project
 * OpenAPI spec version: 0.1.0
 */
import type {
  HTTPValidationError,
  Message,
  UtilsTestEmailParams
} from '.././models';

import { customFetch } from '.././custom-fetch';

/**
 * Test emails.
 * @summary Test Email
 */
export type utilsTestEmailResponse201 = {
  data: Message
  status: 201
}

export type utilsTestEmailResponse422 = {
  data: HTTPValidationError
  status: 422
}
    
export type utilsTestEmailResponseComposite = utilsTestEmailResponse201 | utilsTestEmailResponse422;
    
export type utilsTestEmailResponse = utilsTestEmailResponseComposite & {
  headers: Headers;
}

export const getUtilsTestEmailUrl = (params: UtilsTestEmailParams,) => {
  const normalizedParams = new URLSearchParams();

  Object.entries(params || {}).forEach(([key, value]) => {
    
    if (value !== undefined) {
      normalizedParams.append(key, value === null ? 'null' : value.toString())
    }
  });

  const stringifiedParams = normalizedParams.toString();

  return stringifiedParams.length > 0 ? `/api/v1/utils/test-email/?${stringifiedParams}` : `/api/v1/utils/test-email/`
}

export const utilsTestEmail = async (params: UtilsTestEmailParams, options?: RequestInit): Promise<utilsTestEmailResponse> => {
  
  return customFetch<utilsTestEmailResponse>(getUtilsTestEmailUrl(params),
  {      
    ...options,
    method: 'POST'
    
    
  }
);}


/**
 * @summary Health Check
 */
export type utilsHealthCheckResponse200 = {
  data: boolean
  status: 200
}
    
export type utilsHealthCheckResponseComposite = utilsHealthCheckResponse200;
    
export type utilsHealthCheckResponse = utilsHealthCheckResponseComposite & {
  headers: Headers;
}

export const getUtilsHealthCheckUrl = () => {


  

  return `/api/v1/utils/health-check/`
}

export const utilsHealthCheck = async ( options?: RequestInit): Promise<utilsHealthCheckResponse> => {
  
  return customFetch<utilsHealthCheckResponse>(getUtilsHealthCheckUrl(),
  {      
    ...options,
    method: 'GET'
    
    
  }
);}


