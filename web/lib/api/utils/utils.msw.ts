/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Full Stack FastAPI Project
 * OpenAPI spec version: 0.1.0
 */
import {
  faker
} from '@faker-js/faker';

import {
  HttpResponse,
  delay,
  http
} from 'msw';

import type {
  Message
} from '.././models';


export const getUtilsTestEmailResponseMock = (overrideResponse: Partial< Message > = {}): Message => ({message: faker.string.alpha({length: {min: 10, max: 20}}), ...overrideResponse})

export const getUtilsHealthCheckResponseMock = (): boolean => (faker.datatype.boolean())


export const getUtilsTestEmailMockHandler = (overrideResponse?: Message | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<Message> | Message)) => {
  return http.post('*/api/v1/utils/test-email/', async (info) => {await delay(1000);
  
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined
    ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse)
    : getUtilsTestEmailResponseMock()),
      { status: 201,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}

export const getUtilsHealthCheckMockHandler = (overrideResponse?: boolean | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<boolean> | boolean)) => {
  return http.get('*/api/v1/utils/health-check/', async (info) => {await delay(1000);
  
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined
    ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse)
    : getUtilsHealthCheckResponseMock()),
      { status: 200,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}
export const getUtilsMock = () => [
  getUtilsTestEmailMockHandler(),
  getUtilsHealthCheckMockHandler()
]
