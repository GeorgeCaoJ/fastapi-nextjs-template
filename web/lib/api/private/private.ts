/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Full Stack FastAPI Project
 * OpenAPI spec version: 0.1.0
 */
import type {
  HTTPValidationError,
  PrivateUserCreate,
  UserPublic
} from '.././models';

import { customFetch } from '.././custom-fetch';

/**
 * Create a new user.
 * @summary Create User
 */
export type privateCreateUserResponse200 = {
  data: UserPublic
  status: 200
}

export type privateCreateUserResponse422 = {
  data: HTTPValidationError
  status: 422
}
    
export type privateCreateUserResponseComposite = privateCreateUserResponse200 | privateCreateUserResponse422;
    
export type privateCreateUserResponse = privateCreateUserResponseComposite & {
  headers: Headers;
}

export const getPrivateCreateUserUrl = () => {


  

  return `/api/v1/private/users/`
}

export const privateCreateUser = async (privateUserCreate: PrivateUserCreate, options?: RequestInit): Promise<privateCreateUserResponse> => {
  
  return customFetch<privateCreateUserResponse>(getPrivateCreateUserUrl(),
  {      
    ...options,
    method: 'POST',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(
      privateUserCreate,)
  }
);}


